/**
 * @file
 * Blends two images into a single image. You can experiment with the `Blend Image` node's input ports to change how the images are blended. 
 *
 * @copyright Copyright © 2012–2016 Kosada Incorporated.
 * This code may be modified and distributed under the terms of the MIT License.
 * For more information, see http://vuo.org/license.
 */

digraph G
{
AllowFirstEvent [type="vuo.event.allowFirst" version="1.0.0" label="Allow First Event|<refresh>refresh\l|<event>event\l|<reset>reset\l|<firstEvent>firstEvent\r" pos="0,165" fillcolor="yellow"];
BlendImage [type="vuo.image.blend" version="1.2.1" label="Blend Image|<refresh>refresh\l|<background>background\l|<foreground>foreground\l|<blendMode>blendMode\l|<foregroundOpacity>foregroundOpacity\l|<blended>blended\r" pos="360,210" fillcolor="violet" _blendMode="\"normal\"" _foregroundOpacity="0.500000"];
GetImage [type="vuo.image.fetch" version="2.0.0" label="Fetch Image|<refresh>refresh\l|<url>url\l|<image>image\r" pos="165,210" _url="\"Sunset.jpg\""];
GetImage3 [type="vuo.image.fetch" version="2.0.0" label="Fetch Image|<refresh>refresh\l|<url>url\l|<image>image\r" pos="165,285" _url="\"Seagulls.jpg\""];
PublishedInputs [type="vuo.in" label="PublishedInputs|<height>height\r|<time>time\r|<width>width\r" _height_type="VuoInteger" _time_type="VuoReal" _width_type="VuoInteger"];
PublishedOutputs [type="vuo.out" label="PublishedOutputs|<outputImage>outputImage\l" _outputImage_type="VuoImage"];

AllowFirstEvent:firstEvent -> GetImage3:refresh;
AllowFirstEvent:firstEvent -> GetImage:refresh;
GetImage3:image -> BlendImage:foreground;
GetImage:image -> BlendImage:background;
PublishedInputs:time -> BlendImage:refresh;
PublishedInputs:time -> AllowFirstEvent:event;
BlendImage:blended -> PublishedOutputs:outputImage;
}
