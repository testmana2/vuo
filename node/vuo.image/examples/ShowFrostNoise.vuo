/**
 * @file
 * Demonstrates the noise parameters in the `Frost Image` node.
 *
 * @copyright Copyright © 2012–2016 Kosada Incorporated.
 * This code may be modified and distributed under the terms of the MIT License.
 * For more information, see http://vuo.org/license.
 */

digraph G
{
Convert2DPointToReal [type="vuo.type.point2d.real.x" version="1.0.1" label="Convert 2D Point to Real|<refresh>refresh\l|<xy>xy\l|<x>x\r" pos="285,300"];
Convert2DPointToReal2 [type="vuo.type.point2d.real.y" version="1.0.1" label="Convert 2D Point to Real|<refresh>refresh\l|<xy>xy\l|<y>y\r" pos="285,420"];
CycleThroughList2 [type="vuo.list.cycle.VuoReal" version="1.0.2" label="Cycle through List|<refresh>refresh\l|<list>list\l|<goForward>goForward\l|<goBackward>goBackward\l|<goToFirst>goToFirst\l|<wrapMode>wrapMode\l|<item>item\r" pos="180,315" _wrapMode="\"wrap\""];
FetchImage [type="vuo.image.fetch" version="2.0.0" label="Fetch Image|<refresh>refresh\l|<url>url\l|<image>image\r" pos="30,15" _url="\"Sunset.jpg\""];
FireOnStart [type="vuo.event.fireOnStart" version="1.0.0" label="Fire on Start|<refresh>refresh\l|<started>started\r" pos="-135,135" fillcolor="yellow" _started_eventThrottling="enqueue"];
FrostImage2 [type="vuo.image.frost" version="1.0.0" label="Frost Image|<refresh>refresh\l|<image>image\l|<color>color\l|<brightness>brightness\l|<noiseTime>noiseTime\l|<noiseAmount>noiseAmount\l|<noiseScale>noiseScale\l|<chromaticAberration>chromaticAberration\l|<iterations>iterations\l|<frostedImage>frostedImage\r" pos="390,240" fillcolor="violet" _color="{\"r\":1,\"g\":1,\"b\":1,\"a\":1}" _brightness="1" _iterations="1"];
MakeList2 [type="vuo.list.make.2.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="134,146" _2="0.10000000000000001"];
MakeList4 [type="vuo.list.make.3.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<3>3\l|<list>list\r" pos="110,326" _1="0.01" _2="0.10000000000000001" _3="0.5"];
MakeList7 [type="vuo.list.make.2.VuoWindowProperty" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="824,311" fillcolor="green"];
MakeList8 [type="vuo.list.make.2.VuoLayer" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="774,296" fillcolor="green"];
MakeScaledLayer [type="vuo.layer.make" version="2.0.0" label="Make Scaled Layer|<refresh>refresh\l|<name>name\l|<image>image\l|<center>center\l|<rotation>rotation\l|<width>width\l|<opacity>opacity\l|<layer>layer\r" pos="600,225" _center="{\"x\":0.0,\"y\":0.0}" _rotation="0.0" _width="2.0" _opacity="1.0"];
MakeTextLayer [type="vuo.layer.make.text" version="1.0.0" label="Make Text Layer|<refresh>refresh\l|<text>text\l|<font>font\l|<center>center\l|<layer>layer\r" pos="600,375" _text="\"Move the mouse right to increase the noise amount.\\nMove the mouse up to increase the chromatic aberration.\\nClick to change the noise scale.\"" _font="{\"fontName\":\"HelveticaNeue-Light\",\"pointSize\":28,\"underline\":false,\"color\":{\"r\":1,\"g\":1,\"b\":1,\"a\":1},\"alignment\":\"left\",\"characterSpacing\":1,\"lineSpacing\":1}" _center="{\"x\":-0.20000000298023224,\"y\":0.5}"];
Multiply [type="vuo.math.multiply.VuoReal" version="2.0.0" label="Multiply|<refresh>refresh\l|<values>values\l|<product>product\r" pos="180,135"];
ReceiveMouseButtons [type="vuo.mouse.button" version="1.0.2" label="Receive Mouse Buttons|<refresh>refresh\l|<window>window\l|<button>button\l|<modifierKey>modifierKey\l|<pressed>pressed\r|<released>released\r" pos="-180,270" fillcolor="yellow" _button="\"left\"" _modifierKey="\"any\"" _pressed_eventThrottling="enqueue" _released_eventThrottling="enqueue"];
ReceiveMouseMoves [type="vuo.mouse.move" version="1.0.3" label="Receive Mouse Moves|<refresh>refresh\l|<window>window\l|<modifierKey>modifierKey\l|<movedTo>movedTo\r" pos="-165,195" fillcolor="yellow" _modifierKey="\"any\"" _movedTo_eventThrottling="drop"];
RenderLayersToWindow [type="vuo.layer.render.window" version="2.3.0" label="Render Layers to Window|<refresh>refresh\l|<layers>layers\l|<setWindowProperties>setWindowProperties\l|<showedWindow>showedWindow\r|<requestedFrame>requestedFrame\r|<renderedLayers>renderedLayers\r" pos="870,285" fillcolor="green" _showedWindow_eventThrottling="enqueue" _requestedFrame_eventThrottling="drop"];
ResizeImage [type="vuo.image.resize" version="1.1.1" label="Resize Image|<refresh>refresh\l|<image>image\l|<sizingMode>sizingMode\l|<width>width\l|<height>height\l|<resizedImage>resizedImage\r" pos="180,30" _sizingMode="\"fit\"" _width="1024" _height="768"];
Scale [type="vuo.math.scale.VuoReal" version="2.0.0" label="Scale|<refresh>refresh\l|<value>value\l|<start>start\l|<end>end\l|<scaledStart>scaledStart\l|<scaledEnd>scaledEnd\l|<scaledValue>scaledValue\r" pos="180,195" _start="-1" _end="1." _scaledStart="0." _scaledEnd="1"];
Scale2 [type="vuo.math.scale.VuoReal" version="2.0.0" label="Scale|<refresh>refresh\l|<value>value\l|<start>start\l|<end>end\l|<scaledStart>scaledStart\l|<scaledEnd>scaledEnd\l|<scaledValue>scaledValue\r" pos="180,435" _start="-0.75" _end="0.75" _scaledStart="0." _scaledEnd="2"];

Convert2DPointToReal2:y -> Scale2:value;
Convert2DPointToReal:x -> Scale:value;
CycleThroughList2:item -> FrostImage2:noiseScale;
FetchImage:image -> ResizeImage:image;
FireOnStart:started -> CycleThroughList2:goForward;
FireOnStart:started -> FetchImage:refresh;
FireOnStart:started -> MakeTextLayer:refresh;
FrostImage2:frostedImage -> MakeScaledLayer:image;
MakeList2:list -> Multiply:values;
MakeList4:list -> CycleThroughList2:list;
MakeList7:list -> RenderLayersToWindow:setWindowProperties;
MakeList8:list -> RenderLayersToWindow:layers;
MakeScaledLayer:layer -> MakeList8:1;
MakeTextLayer:layer -> MakeList8:2;
Multiply:product -> FrostImage2:noiseTime;
ReceiveMouseButtons:pressed -> CycleThroughList2:goForward;
ReceiveMouseMoves:movedTo -> Convert2DPointToReal2:xy;
ReceiveMouseMoves:movedTo -> Convert2DPointToReal:xy;
RenderLayersToWindow:requestedFrame -> MakeList2:1 [style=invis];
RenderLayersToWindow:showedWindow -> ReceiveMouseButtons:window [style=invis];
RenderLayersToWindow:showedWindow -> ReceiveMouseMoves:window [style=invis];
ResizeImage:resizedImage -> FrostImage2:image;
Scale2:scaledValue -> FrostImage2:chromaticAberration;
Scale:scaledValue -> FrostImage2:noiseAmount;
}
