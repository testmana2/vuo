/**
* @file
* Receives MIDI notes from a MIDI device and displays them like a player-piano-style piano roll.
*
* @copyright Copyright © 2012–2016 Kosada Incorporated.
* This code may be modified and distributed under the terms of the MIT License.
* For more information, see http://vuo.org/license.
*/

digraph G
{
CombineLayersWithTransform [type="vuo.layer.combine" version="1.0.0" label="Combine Layers with Transform|<refresh>refresh\l|<transform>transform\l|<layers>layers\l|<layer>layer\r" pos="870,555" _transform="{\"translation\":[-0.94999998807907104,-0.5],\"rotation\":0,\"scale\":[0.014999999664723873,0.014999999664723873]}"];
ConvertIntegerListToRealList [type="vuo.type.list.integer.real" version="1.0.0" label="Convert Integer List to Real List|<refresh>refresh\l|<integers>integers\l|<reals>reals\r" pos="375,795"];
ConvertRealListTo2DPointList [type="vuo.type.list.real.point2d.x" version="1.0.1" label="Convert Real List to 2D Point List|<refresh>refresh\l|<x>x\l|<point2d>point2d\r" pos="960,480"];
CopyLayer [type="vuo.layer.copy.trs" version="2.0.1" label="Copy Layer|<refresh>refresh\l|<layer>layer\l|<translations>translations\l|<rotations>rotations\l|<scales>scales\l|<copies>copies\r" pos="705,615"];
FilterPolyphonicNote [type="vuo.midi.track.note.poly" version="1.0.0" label="Track Notes|<refresh>refresh\l|<note>note\l|<channel>channel\l|<noteNumberMin>noteNumberMin\l|<noteNumberMax>noteNumberMax\l|<reset>reset\l|<notes>notes\r|<noteNumbers>noteNumbers\r|<velocities>velocities\r" pos="165,780" fillcolor="violet" _channel="1" _noteNumberMin="0" _noteNumberMax="127"];
FireOnStart [type="vuo.event.fireOnStart" version="1.0.0" label="Fire on Start|<refresh>refresh\l|<started>started\r" pos="165,480" fillcolor="yellow" _started_eventThrottling="enqueue"];
HoldValue3 [type="vuo.data.hold.VuoImage" version="2.0.0" label="Hold Value|<refresh>refresh\l|<initialValue>initialValue\l|<newValue>newValue\l|<heldValue>heldValue\r" pos="1095,345"];
MakeColorLayer [type="vuo.layer.make.color" version="1.1.0" label="Make Color Layer|<refresh>refresh\l|<name>name\l|<color>color\l|<center>center\l|<rotation>rotation\l|<width>width\l|<height>height\l|<layer>layer\r" pos="390,615" _name="\"\"" _color="{\"r\":1,\"g\":1,\"b\":1,\"a\":1}" _center="{\"x\":0.000000,\"y\":0.000000}" _rotation="0.000000" _width="1.000000" _height="1.000000"];
MakeList [type="vuo.list.make.2.VuoLayer" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="1459,251" fillcolor="green"];
MakeList14 [type="vuo.list.make.1.VuoReal" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="580,656"];
MakeList2 [type="vuo.list.make.1.VuoPoint2d" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="659,671" _1="{\"x\":0.500000,\"y\":1.000000}"];
MakeList3 [type="vuo.list.make.2.VuoLayer" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<list>list\r" pos="1175,551"];
MakeList4 [type="vuo.list.make.0.VuoWindowProperty" version="2.0.0" label="Make List|<refresh>refresh\l|<list>list\r" pos="1489,266" fillcolor="green"];
MakeList8 [type="vuo.list.make.1.VuoLayer" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="824,581"];
MakeScaledLayer [type="vuo.layer.make" version="2.0.0" label="Make Scaled Layer|<refresh>refresh\l|<name>name\l|<image>image\l|<center>center\l|<rotation>rotation\l|<width>width\l|<opacity>opacity\l|<layer>layer\r" pos="1275,330" _name="\"\"" _center="{\"x\":0.000000,\"y\":0.005000}" _rotation="0.000000" _width="2.000000" _opacity="1.000000"];
MakeTextLayer [type="vuo.layer.make.text" version="1.0.0" label="Make Text Layer|<refresh>refresh\l|<text>text\l|<font>font\l|<center>center\l|<layer>layer\r" pos="1290,195" _text="\"Play some notes on a MIDI instrument (channel 1).\"" _font="{\"fontName\":\"HelveticaNeue-Light\",\"pointSize\":28}" _center="{\"x\":0.000000,\"y\":-0.600000}"];
ReceiveMIDIEvents [type="vuo.midi.receive" version="2.1.0" label="Receive MIDI Events|<refresh>refresh\l|<device>device\l|<receivedNote>receivedNote\r|<receivedController>receivedController\r|<receivedPitchBend>receivedPitchBend\r" pos="-45,780" fillcolor="yellow" _receivedNote_eventThrottling="enqueue" _receivedController_eventThrottling="enqueue" _receivedPitchBend_eventThrottling="enqueue"];
RenderLayersToImage [type="vuo.layer.render.image" version="1.2.0" label="Render Layers to Image|<refresh>refresh\l|<layers>layers\l|<width>width\l|<height>height\l|<colorDepth>colorDepth\l|<multisampling>multisampling\l|<image>image\r|<renderedLayers>renderedLayers\r" pos="1245,540" _width="1024" _height="768" _colorDepth="\"8bpc\"" _multisampling="\"1\""];
RenderLayersToWindow [type="vuo.layer.render.window" version="2.3.0" label="Render Layers to Window|<refresh>refresh\l|<layers>layers\l|<setWindowProperties>setWindowProperties\l|<showedWindow>showedWindow\r|<requestedFrame>requestedFrame\r|<renderedLayers>renderedLayers\r" pos="1530,240" fillcolor="green" _showedWindow_eventThrottling="enqueue" _requestedFrame_eventThrottling="drop"];

CombineLayersWithTransform:layer -> MakeList3:2;
ConvertIntegerListToRealList:reals -> ConvertRealListTo2DPointList:x;
ConvertRealListTo2DPointList:point2d -> CopyLayer:translations;
CopyLayer:copies -> MakeList8:1;
FilterPolyphonicNote:noteNumbers -> ConvertIntegerListToRealList:integers;
FireOnStart:started -> ConvertIntegerListToRealList:refresh;
FireOnStart:started -> MakeColorLayer:refresh;
FireOnStart:started -> MakeTextLayer:refresh;
HoldValue3:heldValue -> MakeScaledLayer:image;
MakeColorLayer:layer -> CopyLayer:layer;
MakeList14:list -> CopyLayer:rotations;
MakeList2:list -> CopyLayer:scales;
MakeList3:list -> RenderLayersToImage:layers;
MakeList4:list -> RenderLayersToWindow:setWindowProperties;
MakeList8:list -> CombineLayersWithTransform:layers;
MakeList:list -> RenderLayersToWindow:layers;
MakeScaledLayer:layer -> MakeList3:1;
MakeScaledLayer:layer -> MakeList:2;
MakeTextLayer:layer -> MakeList:1;
ReceiveMIDIEvents:receivedNote -> FilterPolyphonicNote:note;
RenderLayersToImage:image -> HoldValue3:newValue;
RenderLayersToWindow:requestedFrame -> HoldValue3:refresh;
}
