/**
 * @file
 * Gradually displays a word, adding one character at a time.
 *
 * @copyright Copyright © 2012–2016 Kosada Incorporated.
 * This code may be modified and distributed under the terms of the MIT License.
 * For more information, see http://vuo.org/license.
 */

digraph G
{
CountCharacters [type="vuo.text.countCharacters" version="1.0.0" label="Count Characters|<refresh>refresh\l|<text>text\l|<characterCount>characterCount\r" pos="381,442" fillcolor="violet"];
CountWithinRange [type="vuo.math.countWithinRange.VuoInteger" version="1.0.0" label="Count within Range|<refresh>refresh\l|<increment>increment\l|<decrement>decrement\l|<setCount>setCount\l|<minimum>minimum\l|<maximum>maximum\l|<wrapMode>wrapMode\l|<count>count\r" pos="594,383" _increment="1" _decrement="1" _setCount="1" _minimum="1" _wrapMode="\"wrap\""];
Cut1 [type="vuo.text.cut" version="2.0.0" label="Cut Text|<refresh>refresh\l|<text>text\l|<startPosition>startPosition\l|<characterCount>characterCount\l|<partialText>partialText\r" pos="798,287" fillcolor="violet" _startPosition="1"];
FireOnStart [type="vuo.event.fireOnStart" version="1.0.0" label="Fire on Start|<refresh>refresh\l|<started>started\r" pos="40,248" fillcolor="yellow" _started_eventThrottling="enqueue"];
FirePeriodically1 [type="vuo.time.firePeriodically" version="1.0.2" label="Fire Periodically|<refresh>refresh\l|<seconds>seconds\l|<fired>fired\r" pos="413,364" fillcolor="yellow" _seconds="1" _fired_eventThrottling="enqueue"];
MakeList4 [type="vuo.list.make.1.VuoLayer" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="1202,299" fillcolor="green"];
MakeList6 [type="vuo.list.make.0.VuoWindowProperty" version="2.0.0" label="Make List|<refresh>refresh\l|<list>list\r" pos="1232,314" fillcolor="green"];
MakeTextLayer [type="vuo.layer.make.text" version="1.0.0" label="Make Text Layer|<refresh>refresh\l|<text>text\l|<font>font\l|<center>center\l|<layer>layer\r" pos="1044,289" _font="{\"fontName\":\"HelveticaNeue-Light\",\"pointSize\":72.000000,\"underline\":false,\"color\":{\"r\":1.000000,\"g\":1.000000,\"b\":1.000000,\"a\":1.000000},\"alignment\":\"left\",\"characterSpacing\":1.000000,\"lineSpacing\":1.000000}" _center="{\"x\":0.000000,\"y\":0.000000}"];
RenderLayersToWindow [type="vuo.layer.render.window" version="2.3.0" label="Render Layers to Window|<refresh>refresh\l|<layers>layers\l|<setWindowProperties>setWindowProperties\l|<showedWindow>showedWindow\r|<requestedFrame>requestedFrame\r|<renderedLayers>renderedLayers\r" pos="1273,288" fillcolor="green" _showedWindow_eventThrottling="enqueue" _requestedFrame_eventThrottling="drop"];
ShareValue2 [type="vuo.data.share.VuoText" version="1.0.0" label="Share Value|<refresh>refresh\l|<value>value\l|<sameValue>sameValue\r" pos="192,285" _value="\"WELCOME\""];

CountCharacters:characterCount -> CountWithinRange:maximum;
CountWithinRange:count -> Cut1:characterCount;
Cut1:partialText -> MakeTextLayer:text;
FireOnStart:started -> ShareValue2:refresh;
FirePeriodically1:fired -> CountWithinRange:increment;
MakeList4:list -> RenderLayersToWindow:layers;
MakeList6:list -> RenderLayersToWindow:setWindowProperties;
MakeTextLayer:layer -> MakeList4:1;
ShareValue2:sameValue -> CountCharacters:text;
ShareValue2:sameValue -> Cut1:text;
}
