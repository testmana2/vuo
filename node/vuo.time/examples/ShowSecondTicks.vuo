/**
 * @file
 * Shows the current date and time, and a visualization of ticking seconds.
 *
 * @copyright Copyright © 2012–2016 Kosada Incorporated.
 * This code may be modified and distributed under the terms of the MIT License.
 * For more information, see http://vuo.org/license.
 */

digraph G
{
CalculateCosine [type="vuo.math.cos" version="1.0.0" label="Calculate Cosine|<refresh>refresh\l|<angle>angle\l|<cosine>cosine\r" pos="450,555"];
CalculateSine [type="vuo.math.sin" version="1.0.0" label="Calculate Sine|<refresh>refresh\l|<angle>angle\l|<sine>sine\r" pos="450,495"];
FetchDateTime [type="vuo.time.fetch" version="1.0.0" label="Fetch Date-Time|<refresh>refresh\l|<time>time\r" pos="180,-105" fillcolor="violet"];
FireOnStart2 [type="vuo.event.fireOnStart" version="1.0.0" label="Fire on Start|<refresh>refresh\l|<started>started\r" pos="450,15" fillcolor="yellow" _started_eventThrottling="enqueue"];
FirePeriodically [type="vuo.time.firePeriodically" version="1.0.2" label="Fire Periodically|<refresh>refresh\l|<seconds>seconds\l|<fired>fired\r" pos="30,-150" fillcolor="yellow" _seconds="1.0" _fired_eventThrottling="drop"];
FormatDateTime [type="vuo.time.format" version="1.0.0" label="Format Date-Time|<refresh>refresh\l|<time>time\l|<format>format\l|<formattedTime>formattedTime\r" pos="465,-105" fillcolor="violet" _format="\"datetime-long-12\""];
GetDateTimeValues [type="vuo.time.get" version="1.0.0" label="Get Date-Time Values|<refresh>refresh\l|<time>time\l|<year>year\r|<dayOfYear>dayOfYear\r|<month>month\r|<dayOfMonth>dayOfMonth\r|<week>week\r|<dayOfWeek>dayOfWeek\r|<hour>hour\r|<minute>minute\r|<second>second\r" pos="210,300" fillcolor="violet"];
Make2DPoint2 [type="vuo.point.make.VuoPoint2d" version="2.0.0" label="Make 2D Point|<refresh>refresh\l|<x>x\l|<y>y\l|<point>point\r" pos="615,495"];
MakeColorLayer [type="vuo.layer.make.color" version="1.1.0" label="Make Color Layer|<refresh>refresh\l|<name>name\l|<color>color\l|<center>center\l|<rotation>rotation\l|<width>width\l|<height>height\l|<layer>layer\r" pos="630,330" _color="{\"r\":1,\"g\":1,\"b\":1,\"a\":0.40000000596046448}" _center="{\"x\":0,\"y\":0}" _rotation="0.0" _width="0.01" _height="1"];
MakeColorLayer2 [type="vuo.layer.make.color" version="1.1.0" label="Make Color Layer|<refresh>refresh\l|<name>name\l|<color>color\l|<center>center\l|<rotation>rotation\l|<width>width\l|<height>height\l|<layer>layer\r" pos="630,195" _color="{\"r\":1,\"g\":1,\"b\":1,\"a\":0.40000000596046448}" _center="{\"x\":0,\"y\":0}" _rotation="0.0" _width="1" _height="0.01"];
MakeList2 [type="vuo.list.make.5.VuoLayer" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<2>2\l|<3>3\l|<4>4\l|<5>5\l|<list>list\r" pos="904,176" fillcolor="green"];
MakeList4 [type="vuo.list.make.0.VuoWindowProperty" version="2.0.0" label="Make List|<refresh>refresh\l|<list>list\r" pos="934,191" fillcolor="green"];
MakeOvalLayer [type="vuo.layer.make.oval" version="1.0.0" label="Make Oval Layer|<refresh>refresh\l|<name>name\l|<color>color\l|<center>center\l|<rotation>rotation\l|<width>width\l|<height>height\l|<sharpness>sharpness\l|<layer>layer\r" pos="630,45" _color="{\"r\":1,\"g\":1,\"b\":1,\"a\":0.14999619126319885}" _center="{\"x\":0.0,\"y\":0.0}" _rotation="0.0" _width="1" _height="1" _sharpness="1"];
MakeOvalLayer2 [type="vuo.layer.make.oval" version="1.0.0" label="Make Oval Layer|<refresh>refresh\l|<name>name\l|<color>color\l|<center>center\l|<rotation>rotation\l|<width>width\l|<height>height\l|<sharpness>sharpness\l|<layer>layer\r" pos="855,555" _color="{\"r\":1,\"g\":0,\"b\":0,\"a\":0.60000002384185791}" _rotation="0.0" _width="0.10000000000000001" _height="0.10000000000000001" _sharpness="1.0"];
MakeTextLayer [type="vuo.layer.make.text" version="1.0.0" label="Make Text Layer|<refresh>refresh\l|<text>text\l|<font>font\l|<center>center\l|<layer>layer\r" pos="630,-75" _font="{\"fontName\":\"HelveticaNeue-Thin\",\"pointSize\":28,\"underline\":false,\"color\":{\"r\":1,\"g\":1,\"b\":1,\"a\":1},\"alignment\":\"left\",\"characterSpacing\":1,\"lineSpacing\":1}" _center="{\"x\":0,\"y\":-0.60000002384185791}"];
RenderLayersToWindow [type="vuo.layer.render.window" version="2.3.0" label="Render Layers to Window|<refresh>refresh\l|<layers>layers\l|<setWindowProperties>setWindowProperties\l|<showedWindow>showedWindow\r|<requestedFrame>requestedFrame\r|<renderedLayers>renderedLayers\r" pos="975,165" fillcolor="green" _showedWindow_eventThrottling="enqueue" _requestedFrame_eventThrottling="drop"];
RoundDateTime [type="vuo.time.round" version="1.0.0" label="Round Date-Time|<refresh>refresh\l|<time>time\l|<unit>unit\l|<roundingMethod>roundingMethod\l|<roundedTime>roundedTime\r" pos="45,300" fillcolor="violet" _unit="\"second\"" _roundingMethod="\"down\""];
Scale2 [type="vuo.math.scale.VuoReal" version="2.0.0" label="Scale|<refresh>refresh\l|<value>value\l|<start>start\l|<end>end\l|<scaledStart>scaledStart\l|<scaledEnd>scaledEnd\l|<scaledValue>scaledValue\r" pos="315,495" _start="0." _end="60" _scaledStart="0" _scaledEnd="360"];
ScalePoint2 [type="vuo.point.multiply.scalar.VuoPoint2d" version="1.0.0" label="Scale Point|<refresh>refresh\l|<point>point\l|<scaleFactor>scaleFactor\l|<scaledPoint>scaledPoint\r" pos="675,585" _scaleFactor="0.5"];

CalculateCosine:cosine -> Make2DPoint2:y;
CalculateSine:sine -> Make2DPoint2:x;
FetchDateTime:time -> FormatDateTime:time;
FetchDateTime:time -> RoundDateTime:time;
FireOnStart2:started -> MakeColorLayer2:refresh;
FireOnStart2:started -> MakeColorLayer:refresh;
FireOnStart2:started -> MakeOvalLayer:refresh;
FirePeriodically:fired -> FetchDateTime:refresh;
FormatDateTime:formattedTime -> MakeTextLayer:text;
GetDateTimeValues:second -> Scale2:value;
Make2DPoint2:point -> ScalePoint2:point;
MakeColorLayer2:layer -> MakeList2:3;
MakeColorLayer:layer -> MakeList2:4;
MakeList2:list -> RenderLayersToWindow:layers;
MakeList4:list -> RenderLayersToWindow:setWindowProperties;
MakeOvalLayer2:layer -> MakeList2:5;
MakeOvalLayer:layer -> MakeList2:2;
MakeTextLayer:layer -> MakeList2:1;
RoundDateTime:roundedTime -> GetDateTimeValues:time;
Scale2:scaledValue -> CalculateCosine:angle;
Scale2:scaledValue -> CalculateSine:angle;
ScalePoint2:scaledPoint -> MakeOvalLayer2:center;
}
